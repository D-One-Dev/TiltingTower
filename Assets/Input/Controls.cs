//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.1
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""4ce3eb42-c379-4573-bef3-f7453db3dd99"",
            ""actions"": [
                {
                    ""name"": ""PointerPos"",
                    ""type"": ""Value"",
                    ""id"": ""ef885b20-e3aa-4db5-9c41-175be0ebd63b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerTap"",
                    ""type"": ""Button"",
                    ""id"": ""d7e6463b-9a8f-474d-9c0b-c4302ed5c9dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointerDelta"",
                    ""type"": ""Value"",
                    ""id"": ""0ce39241-b084-4a6e-9325-ab1236c5cb2c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveBlockLeft"",
                    ""type"": ""Button"",
                    ""id"": ""961113d1-06b9-4a66-988d-2846325b2930"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveBlockRight"",
                    ""type"": ""Button"",
                    ""id"": ""26f2d63a-f9e9-4224-8b19-00b21c5151ce"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateBlock"",
                    ""type"": ""Button"",
                    ""id"": ""5424190f-e7dc-4ced-8f6f-218494b4abb5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropBlock"",
                    ""type"": ""Button"",
                    ""id"": ""30e46501-085a-4908-8252-4a568267c839"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eb5d5708-5337-41cb-ac6c-f9f4af4a62fb"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""126fcef6-2341-4e07-a855-0aa453607951"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1fe7dd3-078b-42fc-99e2-50742ea1c0a2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerTap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f7936c9-eef8-4ee2-8c67-ae688e60c367"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerTap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00d08ed1-58dc-451c-a389-7209eec962b7"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0612ce68-9a4a-4d1d-9634-ecc664dc1d3a"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff9ebd36-f0e0-450c-b653-ae6cf21c1b69"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08d16dec-23ab-4896-a1b1-25e3a4ad59da"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBlockRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13e05bd4-0ef7-47cb-b141-418be26b469e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1f48e02-09ba-40b0-9d16-9ace538bf472"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_PointerPos = m_Gameplay.FindAction("PointerPos", throwIfNotFound: true);
        m_Gameplay_PointerTap = m_Gameplay.FindAction("PointerTap", throwIfNotFound: true);
        m_Gameplay_PointerDelta = m_Gameplay.FindAction("PointerDelta", throwIfNotFound: true);
        m_Gameplay_MoveBlockLeft = m_Gameplay.FindAction("MoveBlockLeft", throwIfNotFound: true);
        m_Gameplay_MoveBlockRight = m_Gameplay.FindAction("MoveBlockRight", throwIfNotFound: true);
        m_Gameplay_RotateBlock = m_Gameplay.FindAction("RotateBlock", throwIfNotFound: true);
        m_Gameplay_DropBlock = m_Gameplay.FindAction("DropBlock", throwIfNotFound: true);
    }

    ~@Controls()
    {
        UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, Controls.Gameplay.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_PointerPos;
    private readonly InputAction m_Gameplay_PointerTap;
    private readonly InputAction m_Gameplay_PointerDelta;
    private readonly InputAction m_Gameplay_MoveBlockLeft;
    private readonly InputAction m_Gameplay_MoveBlockRight;
    private readonly InputAction m_Gameplay_RotateBlock;
    private readonly InputAction m_Gameplay_DropBlock;
    public struct GameplayActions
    {
        private @Controls m_Wrapper;
        public GameplayActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PointerPos => m_Wrapper.m_Gameplay_PointerPos;
        public InputAction @PointerTap => m_Wrapper.m_Gameplay_PointerTap;
        public InputAction @PointerDelta => m_Wrapper.m_Gameplay_PointerDelta;
        public InputAction @MoveBlockLeft => m_Wrapper.m_Gameplay_MoveBlockLeft;
        public InputAction @MoveBlockRight => m_Wrapper.m_Gameplay_MoveBlockRight;
        public InputAction @RotateBlock => m_Wrapper.m_Gameplay_RotateBlock;
        public InputAction @DropBlock => m_Wrapper.m_Gameplay_DropBlock;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @PointerPos.started += instance.OnPointerPos;
            @PointerPos.performed += instance.OnPointerPos;
            @PointerPos.canceled += instance.OnPointerPos;
            @PointerTap.started += instance.OnPointerTap;
            @PointerTap.performed += instance.OnPointerTap;
            @PointerTap.canceled += instance.OnPointerTap;
            @PointerDelta.started += instance.OnPointerDelta;
            @PointerDelta.performed += instance.OnPointerDelta;
            @PointerDelta.canceled += instance.OnPointerDelta;
            @MoveBlockLeft.started += instance.OnMoveBlockLeft;
            @MoveBlockLeft.performed += instance.OnMoveBlockLeft;
            @MoveBlockLeft.canceled += instance.OnMoveBlockLeft;
            @MoveBlockRight.started += instance.OnMoveBlockRight;
            @MoveBlockRight.performed += instance.OnMoveBlockRight;
            @MoveBlockRight.canceled += instance.OnMoveBlockRight;
            @RotateBlock.started += instance.OnRotateBlock;
            @RotateBlock.performed += instance.OnRotateBlock;
            @RotateBlock.canceled += instance.OnRotateBlock;
            @DropBlock.started += instance.OnDropBlock;
            @DropBlock.performed += instance.OnDropBlock;
            @DropBlock.canceled += instance.OnDropBlock;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @PointerPos.started -= instance.OnPointerPos;
            @PointerPos.performed -= instance.OnPointerPos;
            @PointerPos.canceled -= instance.OnPointerPos;
            @PointerTap.started -= instance.OnPointerTap;
            @PointerTap.performed -= instance.OnPointerTap;
            @PointerTap.canceled -= instance.OnPointerTap;
            @PointerDelta.started -= instance.OnPointerDelta;
            @PointerDelta.performed -= instance.OnPointerDelta;
            @PointerDelta.canceled -= instance.OnPointerDelta;
            @MoveBlockLeft.started -= instance.OnMoveBlockLeft;
            @MoveBlockLeft.performed -= instance.OnMoveBlockLeft;
            @MoveBlockLeft.canceled -= instance.OnMoveBlockLeft;
            @MoveBlockRight.started -= instance.OnMoveBlockRight;
            @MoveBlockRight.performed -= instance.OnMoveBlockRight;
            @MoveBlockRight.canceled -= instance.OnMoveBlockRight;
            @RotateBlock.started -= instance.OnRotateBlock;
            @RotateBlock.performed -= instance.OnRotateBlock;
            @RotateBlock.canceled -= instance.OnRotateBlock;
            @DropBlock.started -= instance.OnDropBlock;
            @DropBlock.performed -= instance.OnDropBlock;
            @DropBlock.canceled -= instance.OnDropBlock;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnPointerPos(InputAction.CallbackContext context);
        void OnPointerTap(InputAction.CallbackContext context);
        void OnPointerDelta(InputAction.CallbackContext context);
        void OnMoveBlockLeft(InputAction.CallbackContext context);
        void OnMoveBlockRight(InputAction.CallbackContext context);
        void OnRotateBlock(InputAction.CallbackContext context);
        void OnDropBlock(InputAction.CallbackContext context);
    }
}
